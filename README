This fork has been modified for Cray XE/XK machine based on the following version of Rubik. 
The work has been presented in SC `16 SRC poster, Mapping Applications on Irregular Allocations
(http://sc16.supercomputing.org/sc-archive/src_poster/src_poster_pages/spost152.html)

================================================================================
 Rubik v1.0.1
================================================================================

Author:
  Todd Gamblin tgamblin@llnl.gov

Contributors:
  Abhinav Bhatele bhatele@llnl.gov
  Martin Schulz schulzm@llnl.gov

Rubik generates mapping files for torus and mesh networks according to
structured transformations of blocks within the ranks.

Source Code:
    https://scalability.llnl.gov/performance-analysis-through-visualization/software/rubik/rubik-1.0.tar.gz
    http://github.com/tgamblin/rubik

Documentation:
    https://scalability.llnl.gov/performance-analysis-through-visualization/software/rubik/docs

More information on rubik at LLNL:
    https://scalability.llnl.gov/performance-analysis-through-visualization/software.php

Running Rubik Scripts:
To use rubik, either add the <distribution>/rubik directory to your PYTHONPATH,
or just be sure to run scripts in the root directory.  A proper setup.py and
installation process is forthcoming.

Prerequisites:

To generate map files with Rubik, you will need an installation of numpy.  To
visualize Rubik partitions, you will need PySide (python Qt bindings) and
OpenGL for Python.  To build the documentation you will need sphinx.

You can install all this relatively easily on a mac through MacPorts:
    port install py27-numpy py27-pyside py27-sphinx py27-opengl

For more on installation, see here:
    https://scalability.llnl.gov/performance-analysis-through-visualization/software/rubik/docs/intro.html#install
